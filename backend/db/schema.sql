PRAGMA foreign_keys = ON;
CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT,email TEXT UNIQUE NOT NULL,password_hash TEXT NOT NULL,name TEXT NOT NULL,role TEXT NOT NULL DEFAULT 'user',created_at DATETIME DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE IF NOT EXISTS species (id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT UNIQUE NOT NULL);
CREATE TABLE IF NOT EXISTS breeds (id INTEGER PRIMARY KEY AUTOINCREMENT,species_id INTEGER NOT NULL,name TEXT NOT NULL,UNIQUE(species_id,name),FOREIGN KEY (species_id) REFERENCES species(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS farms (id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT NOT NULL,location TEXT);
CREATE TABLE IF NOT EXISTS animals (id INTEGER PRIMARY KEY AUTOINCREMENT,tag_code TEXT UNIQUE NOT NULL,name TEXT,sex TEXT CHECK (sex IN ('M','F','U')) NOT NULL DEFAULT 'U',birth_date DATE,species_id INTEGER,breed_id INTEGER,farm_id INTEGER,color TEXT,status TEXT NOT NULL DEFAULT 'activo',sire_id INTEGER,dam_id INTEGER,created_at DATETIME DEFAULT CURRENT_TIMESTAMP,updated_at DATETIME,FOREIGN KEY (species_id) REFERENCES species(id),FOREIGN KEY (breed_id) REFERENCES breeds(id),FOREIGN KEY (farm_id) REFERENCES farms(id),FOREIGN KEY (sire_id) REFERENCES animals(id),FOREIGN KEY (dam_id) REFERENCES animals(id));
CREATE TABLE IF NOT EXISTS animal_weights (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER NOT NULL,date DATE,weight_kg REAL NOT NULL,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS animal_vaccinations (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER NOT NULL,date DATE,vaccine TEXT NOT NULL,notes TEXT,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS photos (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER NOT NULL,filename TEXT NOT NULL,uploaded_at DATETIME DEFAULT CURRENT_TIMESTAMP,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS catalog_items (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER UNIQUE NOT NULL,visible INTEGER NOT NULL DEFAULT 1,created_at DATETIME DEFAULT CURRENT_TIMESTAMP,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE);

-- RF5: Tablas para tratamientos veterinarios
CREATE TABLE IF NOT EXISTS veterinarians (id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT NOT NULL,license_number TEXT UNIQUE,phone TEXT,email TEXT,specialization TEXT,created_at DATETIME DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE IF NOT EXISTS medications (id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT NOT NULL,active_ingredient TEXT,dosage_form TEXT CHECK (dosage_form IN ('inyeccion','oral','topico','inhalacion')) NOT NULL,concentration TEXT,manufacturer TEXT,batch_number TEXT,expiration_date DATE,created_at DATETIME DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE IF NOT EXISTS treatments (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER NOT NULL,veterinarian_id INTEGER,treatment_date DATE NOT NULL,treatment_type TEXT CHECK (treatment_type IN ('preventivo','curativo','quirurgico','reproductivo','nutricional')) NOT NULL,diagnosis TEXT,symptoms TEXT,treatment_description TEXT NOT NULL,dosage TEXT,duration_days INTEGER,cost REAL,status TEXT CHECK (status IN ('en_progreso','completado','cancelado','suspender')) DEFAULT 'en_progreso',follow_up_date DATE,notes TEXT,created_at DATETIME DEFAULT CURRENT_TIMESTAMP,updated_at DATETIME,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE,FOREIGN KEY (veterinarian_id) REFERENCES veterinarians(id));
CREATE TABLE IF NOT EXISTS treatment_medications (id INTEGER PRIMARY KEY AUTOINCREMENT,treatment_id INTEGER NOT NULL,medication_id INTEGER NOT NULL,dosage_amount REAL,dosage_unit TEXT,frequency_per_day INTEGER,administration_route TEXT,FOREIGN KEY (treatment_id) REFERENCES treatments(id) ON DELETE CASCADE,FOREIGN KEY (medication_id) REFERENCES medications(id) ON DELETE CASCADE);

-- RF6: Tablas para alertas sanitarias
CREATE TABLE IF NOT EXISTS health_alerts (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER,alert_type TEXT CHECK (alert_type IN ('vacuna_vencida','tratamiento_pendiente','cuarentena','enfermedad','peso_bajo','peso_alto','revision_periodica')) NOT NULL,severity TEXT CHECK (severity IN ('baja','media','alta','critica')) NOT NULL DEFAULT 'media',title TEXT NOT NULL,description TEXT NOT NULL,alert_date DATE NOT NULL,due_date DATE,status TEXT CHECK (status IN ('activa','resuelta','cancelada')) DEFAULT 'activa',resolved_at DATETIME,resolved_by INTEGER,created_at DATETIME DEFAULT CURRENT_TIMESTAMP,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE,FOREIGN KEY (resolved_by) REFERENCES users(id));
CREATE TABLE IF NOT EXISTS quarantines (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER NOT NULL,start_date DATE NOT NULL,end_date DATE,reason TEXT NOT NULL,location TEXT,restrictions TEXT,status TEXT CHECK (status IN ('activa','finalizada','cancelada')) DEFAULT 'activa',veterinarian_id INTEGER,notes TEXT,created_at DATETIME DEFAULT CURRENT_TIMESTAMP,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE,FOREIGN KEY (veterinarian_id) REFERENCES veterinarians(id));

-- RF7: Tablas para reportes sanitarios
CREATE TABLE IF NOT EXISTS health_reports (id INTEGER PRIMARY KEY AUTOINCREMENT,report_type TEXT CHECK (report_type IN ('individual','lote','general','sanitario','reproductivo','nutricional')) NOT NULL,animal_id INTEGER,farm_id INTEGER,report_date DATE NOT NULL,period_start DATE,period_end DATE,generated_by INTEGER NOT NULL,title TEXT NOT NULL,summary TEXT,findings TEXT,recommendations TEXT,status TEXT CHECK (status IN ('borrador','finalizado','archivado')) DEFAULT 'borrador',created_at DATETIME DEFAULT CURRENT_TIMESTAMP,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE,FOREIGN KEY (farm_id) REFERENCES farms(id),FOREIGN KEY (generated_by) REFERENCES users(id));
CREATE TABLE IF NOT EXISTS health_metrics (id INTEGER PRIMARY KEY AUTOINCREMENT,animal_id INTEGER NOT NULL,metric_date DATE NOT NULL,temperature REAL,heart_rate INTEGER,respiratory_rate INTEGER,weight REAL,body_condition_score REAL,notes TEXT,veterinarian_id INTEGER,created_at DATETIME DEFAULT CURRENT_TIMESTAMP,FOREIGN KEY (animal_id) REFERENCES animals(id) ON DELETE CASCADE,FOREIGN KEY (veterinarian_id) REFERENCES veterinarians(id));